pipeline {
  agent any
  parameters {
    string(name: 'build_version', defaultValue: 'V1.0', description: 'Build version to use for Docker image')
  }
  stages {
    stage('Checkout') {
      steps {
        git branch: 'main', url: 'https://github.com/feryyy28/devops-demo-project.git'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // Build the project and create a JAR file
        sh 'cd demo-java-app && mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://sonarqube:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd demo-java-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Docker Login') {
      steps {
        script {
          sh 'docker login -u "feryel28" -p "fery@2801"'
        }
      }
    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "feryel28/demo-java-app:${build_version}"
      }
      steps {
        script {
          sh 'cd demo-java-app && docker build -t ${DOCKER_IMAGE} .'
          sh 'docker push ${DOCKER_IMAGE}'
        }
      }
    }
    stage('Update Deployment File') {
      environment {
        GIT_REPO_NAME = "devops-demo-project"
        GIT_USER_NAME = "feryyy28"
      }
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            git config user.email "feryelbenalaya0@gmail.com"
            git config user.name "feryyy28"
            sed -i "s/tag: .*/tag: \"${build_version}\"/" helm/app/values.yaml
            git add helm/app/values.yaml
            git commit -m "Update deployment image to version ${build_version}"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          '''
        }
      }
    }
  }
}


